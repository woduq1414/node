{
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\User\\\\nodejs\",\"filename\":\"C:\\\\Users\\\\User\\\\nodejs\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\nodejs\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\User\\nodejs",
      "filename": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\nodejs",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = styles;\nexports.scripts = scripts;\nexports.images = images;\nexports.watch = watchFiles;\nexports[\"default\"] = exports.clean = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar paths = {\n  styles: {\n    src: './public/stylesheets/style.css',\n    dest: './public/dist/'\n  },\n  scripts: {\n    src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\n    dest: './public/dist/'\n  },\n  images: {\n    src: './public/images/*.{jpg,jpeg,png}',\n    dest: './public/dist/'\n  }\n};\n/*\r\n * For small tasks you can export arrow functions\r\n */\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['assets']);\n};\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\n\n\nexports.clean = clean;\n\nfunction styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpCleanCss[\"default\"])()) // pass in options to the stream\n  .pipe((0, _gulpRename[\"default\"])({\n    basename: 'main',\n    suffix: '.min'\n  })).pipe(_gulp[\"default\"].dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return _gulp[\"default\"].src(paths.scripts.src, {\n    sourcemaps: true\n  }).pipe((0, _gulpBabel[\"default\"])({\n    presets: [[\"@babel/preset-env\", {\n      \"modules\": false\n    }]]\n  })).pipe((0, _gulpUglify[\"default\"])()).pipe((0, _gulpConcat[\"default\"])('main.min.js')).pipe(_gulp[\"default\"].dest(paths.scripts.dest));\n}\n\nfunction images() {\n  return _gulp[\"default\"].src(paths.images.src, {\n    since: _gulp[\"default\"].lastRun(images)\n  }).pipe((0, _gulpImagemin[\"default\"])({\n    optimizationLevel: 5\n  })).pipe(_gulp[\"default\"].dest(paths.images.dest));\n}\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\n\n\nfunction watchFiles() {\n  _gulp[\"default\"].watch(paths.scripts.src, scripts);\n\n  _gulp[\"default\"].watch(paths.styles.src, styles);\n}\n\nvar build = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts));\n/*\r\n * Export a default task\r\n */\n\n\nvar _default = build;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInBhdGhzIiwic3R5bGVzIiwic3JjIiwiZGVzdCIsInNjcmlwdHMiLCJpbWFnZXMiLCJjbGVhbiIsImd1bHAiLCJwaXBlIiwiYmFzZW5hbWUiLCJzdWZmaXgiLCJzb3VyY2VtYXBzIiwicHJlc2V0cyIsInNpbmNlIiwibGFzdFJ1biIsIm9wdGltaXphdGlvbkxldmVsIiwid2F0Y2hGaWxlcyIsIndhdGNoIiwiYnVpbGQiLCJzZXJpZXMiLCJwYXJhbGxlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBLElBQU1BLEtBQUssR0FBRztBQUNWQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsR0FBRyxFQUFFLGdDQUREO0FBRUpDLElBQUFBLElBQUksRUFBRTtBQUZGLEdBREU7QUFLVkMsRUFBQUEsT0FBTyxFQUFFO0FBQ0xGLElBQUFBLEdBQUcsRUFBRSxDQUFDLDhCQUFELEVBQWlDLDhCQUFqQyxDQURBO0FBRUxDLElBQUFBLElBQUksRUFBRTtBQUZELEdBTEM7QUFTVkUsRUFBQUEsTUFBTSxFQUFFO0FBQ0pILElBQUFBLEdBQUcsRUFBRSxrQ0FERDtBQUVKQyxJQUFBQSxJQUFJLEVBQUU7QUFGRjtBQVRFLENBQWQ7QUFlQTs7OztBQUdPLElBQU1HLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFFLFFBQUYsQ0FBSixDQUFOO0FBQUEsQ0FBZDtBQUVQOzs7Ozs7O0FBR08sU0FBU0wsTUFBVCxHQUFrQjtBQUNyQixTQUFPTSxpQkFBS0wsR0FBTCxDQUFTRixLQUFLLENBQUNDLE1BQU4sQ0FBYUMsR0FBdEIsRUFDRk0sSUFERSxDQUNHLCtCQURILEVBRUg7QUFGRyxHQUdGQSxJQUhFLENBR0csNEJBQU87QUFDVEMsSUFBQUEsUUFBUSxFQUFFLE1BREQ7QUFFVEMsSUFBQUEsTUFBTSxFQUFFO0FBRkMsR0FBUCxDQUhILEVBT0ZGLElBUEUsQ0FPR0QsaUJBQUtKLElBQUwsQ0FBVUgsS0FBSyxDQUFDQyxNQUFOLENBQWFFLElBQXZCLENBUEgsQ0FBUDtBQVFIOztBQUVNLFNBQVNDLE9BQVQsR0FBbUI7QUFDdEIsU0FBT0csaUJBQUtMLEdBQUwsQ0FBU0YsS0FBSyxDQUFDSSxPQUFOLENBQWNGLEdBQXZCLEVBQTRCO0FBQUVTLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQTVCLEVBQ0ZILElBREUsQ0FDRywyQkFBTTtBQUFFSSxJQUFBQSxPQUFPLEVBQUUsQ0FDbkIsQ0FBQyxtQkFBRCxFQUFzQjtBQUFDLGlCQUFZO0FBQWIsS0FBdEIsQ0FEbUI7QUFBWCxHQUFOLENBREgsRUFLRkosSUFMRSxDQUtHLDZCQUxILEVBTUZBLElBTkUsQ0FNRyw0QkFBTyxhQUFQLENBTkgsRUFPRkEsSUFQRSxDQU9HRCxpQkFBS0osSUFBTCxDQUFVSCxLQUFLLENBQUNJLE9BQU4sQ0FBY0QsSUFBeEIsQ0FQSCxDQUFQO0FBU0g7O0FBRU0sU0FBU0UsTUFBVCxHQUFpQjtBQUVwQixTQUFPRSxpQkFBS0wsR0FBTCxDQUFTRixLQUFLLENBQUNLLE1BQU4sQ0FBYUgsR0FBdEIsRUFBMkI7QUFBQ1csSUFBQUEsS0FBSyxFQUFFTixpQkFBS08sT0FBTCxDQUFhVCxNQUFiO0FBQVIsR0FBM0IsRUFDRkcsSUFERSxDQUNHLDhCQUFTO0FBQUNPLElBQUFBLGlCQUFpQixFQUFFO0FBQXBCLEdBQVQsQ0FESCxFQUVGUCxJQUZFLENBRUdELGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0ssTUFBTixDQUFhRixJQUF2QixDQUZILENBQVA7QUFJSDtBQUVEOzs7OztBQUdBLFNBQVNhLFVBQVQsR0FBc0I7QUFDbEJULG1CQUFLVSxLQUFMLENBQVdqQixLQUFLLENBQUNJLE9BQU4sQ0FBY0YsR0FBekIsRUFBOEJFLE9BQTlCOztBQUNBRyxtQkFBS1UsS0FBTCxDQUFXakIsS0FBSyxDQUFDQyxNQUFOLENBQWFDLEdBQXhCLEVBQTZCRCxNQUE3QjtBQUNIOztBQUdELElBQU1pQixLQUFLLEdBQUdYLGlCQUFLWSxNQUFMLENBQVliLEtBQVosRUFBbUJDLGlCQUFLYSxRQUFMLENBQWNuQixNQUFkLEVBQXNCRyxPQUF0QixDQUFuQixDQUFkO0FBQ0E7Ozs7O2VBR2VjLEsiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxVc2VyXFxub2RlanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuXHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGNvbmNhdCBmcm9tICdndWxwLWNvbmNhdCc7XHJcbmltcG9ydCB1Z2xpZnkgZnJvbSAnZ3VscC11Z2xpZnknO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IGNsZWFuQ1NTIGZyb20gJ2d1bHAtY2xlYW4tY3NzJztcclxuaW1wb3J0IGRlbCBmcm9tICdkZWwnO1xyXG5pbXBvcnQgaW1hZ2VtaW4gZnJvbSAnZ3VscC1pbWFnZW1pbic7XHJcblxyXG5cclxuY29uc3QgcGF0aHMgPSB7XHJcbiAgICBzdHlsZXM6IHtcclxuICAgICAgICBzcmM6ICcuL3B1YmxpYy9zdHlsZXNoZWV0cy9zdHlsZS5jc3MnLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH0sXHJcbiAgICBzY3JpcHRzOiB7XHJcbiAgICAgICAgc3JjOiBbJy4vcHVibGljL2phdmFzY3JpcHRzL21haW4uanMnLCAnLi9wdWJsaWMvamF2YXNjcmlwdHMvZ2FtZS5qcyddLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH0sXHJcbiAgICBpbWFnZXM6IHtcclxuICAgICAgICBzcmM6ICcuL3B1YmxpYy9pbWFnZXMvKi57anBnLGpwZWcscG5nfScsXHJcbiAgICAgICAgZGVzdDogJy4vcHVibGljL2Rpc3QvJ1xyXG4gICAgfVxyXG59O1xyXG5cclxuLypcclxuICogRm9yIHNtYWxsIHRhc2tzIHlvdSBjYW4gZXhwb3J0IGFycm93IGZ1bmN0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsgJ2Fzc2V0cycgXSk7XHJcblxyXG4vKlxyXG4gKiBZb3UgY2FuIGFsc28gZGVjbGFyZSBuYW1lZCBmdW5jdGlvbnMgYW5kIGV4cG9ydCB0aGVtIGFzIHRhc2tzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVzKCkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnN0eWxlcy5zcmMpXHJcbiAgICAgICAgLnBpcGUoY2xlYW5DU1MoKSlcclxuICAgICAgICAvLyBwYXNzIGluIG9wdGlvbnMgdG8gdGhlIHN0cmVhbVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7XHJcbiAgICAgICAgICAgIGJhc2VuYW1lOiAnbWFpbicsXHJcbiAgICAgICAgICAgIHN1ZmZpeDogJy5taW4nXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0KSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzY3JpcHRzKCkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnNjcmlwdHMuc3JjLCB7IHNvdXJjZW1hcHM6IHRydWUgfSlcclxuICAgICAgICAucGlwZShiYWJlbCh7IHByZXNldHM6IFtcclxuICAgICAgICAgICAgW1wiQGJhYmVsL3ByZXNldC1lbnZcIiwge1wibW9kdWxlc1wiIDogZmFsc2V9XVxyXG4gICAgICAgICAgXSBcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZSh1Z2xpZnkoKSlcclxuICAgICAgICAucGlwZShjb25jYXQoJ21haW4ubWluLmpzJykpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnNjcmlwdHMuZGVzdCkpO1xyXG4gICAgICAgIFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2VzKCl7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLmltYWdlcy5zcmMsIHtzaW5jZTogZ3VscC5sYXN0UnVuKGltYWdlcyl9KVxyXG4gICAgICAgIC5waXBlKGltYWdlbWluKHtvcHRpbWl6YXRpb25MZXZlbDogNX0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5pbWFnZXMuZGVzdCkpO1xyXG5cclxufVxyXG5cclxuLypcclxuICogWW91IGNvdWxkIGV2ZW4gdXNlIGBleHBvcnQgYXNgIHRvIHJlbmFtZSBleHBvcnRlZCB0YXNrc1xyXG4gKi9cclxuZnVuY3Rpb24gd2F0Y2hGaWxlcygpIHtcclxuICAgIGd1bHAud2F0Y2gocGF0aHMuc2NyaXB0cy5zcmMsIHNjcmlwdHMpO1xyXG4gICAgZ3VscC53YXRjaChwYXRocy5zdHlsZXMuc3JjLCBzdHlsZXMpO1xyXG59XHJcbmV4cG9ydCB7IHdhdGNoRmlsZXMgYXMgd2F0Y2ggfTtcclxuXHJcbmNvbnN0IGJ1aWxkID0gZ3VscC5zZXJpZXMoY2xlYW4sIGd1bHAucGFyYWxsZWwoc3R5bGVzLCBzY3JpcHRzKSk7XHJcbi8qXHJcbiAqIEV4cG9ydCBhIGRlZmF1bHQgdGFza1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgYnVpbGQ7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "paths",
        "styles",
        "src",
        "dest",
        "scripts",
        "images",
        "clean",
        "gulp",
        "pipe",
        "basename",
        "suffix",
        "sourcemaps",
        "presets",
        "since",
        "lastRun",
        "optimizationLevel",
        "watchFiles",
        "watch",
        "build",
        "series",
        "parallel"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE,gCADD;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADE;AAKVC,EAAAA,OAAO,EAAE;AACLF,IAAAA,GAAG,EAAE,CAAC,8BAAD,EAAiC,8BAAjC,CADA;AAELC,IAAAA,IAAI,EAAE;AAFD,GALC;AASVE,EAAAA,MAAM,EAAE;AACJH,IAAAA,GAAG,EAAE,kCADD;AAEJC,IAAAA,IAAI,EAAE;AAFF;AATE,CAAd;AAeA;;;;AAGO,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAE,QAAF,CAAJ,CAAN;AAAA,CAAd;AAEP;;;;;;;AAGO,SAASL,MAAT,GAAkB;AACrB,SAAOM,iBAAKL,GAAL,CAASF,KAAK,CAACC,MAAN,CAAaC,GAAtB,EACFM,IADE,CACG,+BADH,EAEH;AAFG,GAGFA,IAHE,CAGG,4BAAO;AACTC,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,MAAM,EAAE;AAFC,GAAP,CAHH,EAOFF,IAPE,CAOGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAPH,CAAP;AAQH;;AAEM,SAASC,OAAT,GAAmB;AACtB,SAAOG,iBAAKL,GAAL,CAASF,KAAK,CAACI,OAAN,CAAcF,GAAvB,EAA4B;AAAES,IAAAA,UAAU,EAAE;AAAd,GAA5B,EACFH,IADE,CACG,2BAAM;AAAEI,IAAAA,OAAO,EAAE,CACnB,CAAC,mBAAD,EAAsB;AAAC,iBAAY;AAAb,KAAtB,CADmB;AAAX,GAAN,CADH,EAKFJ,IALE,CAKG,6BALH,EAMFA,IANE,CAMG,4BAAO,aAAP,CANH,EAOFA,IAPE,CAOGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACI,OAAN,CAAcD,IAAxB,CAPH,CAAP;AASH;;AAEM,SAASE,MAAT,GAAiB;AAEpB,SAAOE,iBAAKL,GAAL,CAASF,KAAK,CAACK,MAAN,CAAaH,GAAtB,EAA2B;AAACW,IAAAA,KAAK,EAAEN,iBAAKO,OAAL,CAAaT,MAAb;AAAR,GAA3B,EACFG,IADE,CACG,8BAAS;AAACO,IAAAA,iBAAiB,EAAE;AAApB,GAAT,CADH,EAEFP,IAFE,CAEGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACK,MAAN,CAAaF,IAAvB,CAFH,CAAP;AAIH;AAED;;;;;AAGA,SAASa,UAAT,GAAsB;AAClBT,mBAAKU,KAAL,CAAWjB,KAAK,CAACI,OAAN,CAAcF,GAAzB,EAA8BE,OAA9B;;AACAG,mBAAKU,KAAL,CAAWjB,KAAK,CAACC,MAAN,CAAaC,GAAxB,EAA6BD,MAA7B;AACH;;AAGD,IAAMiB,KAAK,GAAGX,iBAAKY,MAAL,CAAYb,KAAZ,EAAmBC,iBAAKa,QAAL,CAAcnB,MAAd,EAAsBG,OAAtB,CAAnB,CAAd;AACA;;;;;eAGec,K",
      "sourceRoot": "C:\\Users\\User\\nodejs",
      "sourcesContent": [
        "import gulp from 'gulp';\r\n\r\nimport babel from 'gulp-babel';\r\nimport concat from 'gulp-concat';\r\nimport uglify from 'gulp-uglify';\r\nimport rename from 'gulp-rename';\r\nimport cleanCSS from 'gulp-clean-css';\r\nimport del from 'del';\r\nimport imagemin from 'gulp-imagemin';\r\n\r\n\r\nconst paths = {\r\n    styles: {\r\n        src: './public/stylesheets/style.css',\r\n        dest: './public/dist/'\r\n    },\r\n    scripts: {\r\n        src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\r\n        dest: './public/dist/'\r\n    },\r\n    images: {\r\n        src: './public/images/*.{jpg,jpeg,png}',\r\n        dest: './public/dist/'\r\n    }\r\n};\r\n\r\n/*\r\n * For small tasks you can export arrow functions\r\n */\r\nexport const clean = () => del([ 'assets' ]);\r\n\r\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\r\nexport function styles() {\r\n    return gulp.src(paths.styles.src)\r\n        .pipe(cleanCSS())\r\n        // pass in options to the stream\r\n        .pipe(rename({\r\n            basename: 'main',\r\n            suffix: '.min'\r\n        }))\r\n        .pipe(gulp.dest(paths.styles.dest));\r\n}\r\n\r\nexport function scripts() {\r\n    return gulp.src(paths.scripts.src, { sourcemaps: true })\r\n        .pipe(babel({ presets: [\r\n            [\"@babel/preset-env\", {\"modules\" : false}]\r\n          ] \r\n        }))\r\n        .pipe(uglify())\r\n        .pipe(concat('main.min.js'))\r\n        .pipe(gulp.dest(paths.scripts.dest));\r\n        \r\n}\r\n\r\nexport function images(){\r\n\r\n    return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\r\n        .pipe(imagemin({optimizationLevel: 5}))\r\n        .pipe(gulp.dest(paths.images.dest));\r\n\r\n}\r\n\r\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\r\nfunction watchFiles() {\r\n    gulp.watch(paths.scripts.src, scripts);\r\n    gulp.watch(paths.styles.src, styles);\r\n}\r\nexport { watchFiles as watch };\r\n\r\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\r\n/*\r\n * Export a default task\r\n */\r\nexport default build;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580447928019
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\User\\\\nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\User\\\\nodejs\",\"filename\":\"C:\\\\Users\\\\User\\\\nodejs\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\User\\\\nodejs\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-dynamic-import\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\User\\nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\User\\nodejs",
      "filename": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\User\\nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-dynamic-import",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\User\\nodejs",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "import gulp from 'gulp';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nvar removeUseStrict = require(\"gulp-remove-use-strict\");\n\nvar paths = {\n  styles: {\n    src: './public/stylesheets/style.css',\n    dest: './public/dist/'\n  },\n  scripts: {\n    src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\n    dest: './public/dist/'\n  }\n};\n/*\r\n * For small tasks you can export arrow functions\r\n */\n\nexport var clean = function clean() {\n  return del(['assets']);\n};\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\n\nexport function styles() {\n  return gulp.src(paths.styles.src).pipe(cleanCSS()) // pass in options to the stream\n  .pipe(rename({\n    basename: 'main',\n    suffix: '.min'\n  })).pipe(gulp.dest(paths.styles.dest));\n}\nexport function scripts() {\n  return gulp.src(paths.scripts.src, {\n    sourcemaps: true\n  }).pipe(babel({\n    presets: ['env']\n  })).pipe(uglify()).pipe(concat('main.min.js')).pipe(gulp.dest(paths.scripts.dest));\n}\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\n\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\nexport { watchFiles as watch };\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n/*\r\n * Export a default task\r\n */\n\nexport default build;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJiYWJlbCIsImNvbmNhdCIsInVnbGlmeSIsInJlbmFtZSIsImNsZWFuQ1NTIiwiZGVsIiwicmVtb3ZlVXNlU3RyaWN0IiwicmVxdWlyZSIsInBhdGhzIiwic3R5bGVzIiwic3JjIiwiZGVzdCIsInNjcmlwdHMiLCJjbGVhbiIsInBpcGUiLCJiYXNlbmFtZSIsInN1ZmZpeCIsInNvdXJjZW1hcHMiLCJwcmVzZXRzIiwid2F0Y2hGaWxlcyIsIndhdGNoIiwiYnVpbGQiLCJzZXJpZXMiLCJwYXJhbGxlbCJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsSUFBUCxNQUFpQixNQUFqQjtBQUVBLE9BQU9DLEtBQVAsTUFBa0IsWUFBbEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLGFBQW5CO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixhQUFuQjtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsYUFBbkI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLGdCQUFyQjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsS0FBaEI7O0FBQ0EsSUFBSUMsZUFBZSxHQUFHQyxPQUFPLENBQUMsd0JBQUQsQ0FBN0I7O0FBRUEsSUFBTUMsS0FBSyxHQUFHO0FBQ1ZDLEVBQUFBLE1BQU0sRUFBRTtBQUNKQyxJQUFBQSxHQUFHLEVBQUUsZ0NBREQ7QUFFSkMsSUFBQUEsSUFBSSxFQUFFO0FBRkYsR0FERTtBQUtWQyxFQUFBQSxPQUFPLEVBQUU7QUFDTEYsSUFBQUEsR0FBRyxFQUFFLENBQUMsOEJBQUQsRUFBaUMsOEJBQWpDLENBREE7QUFFTEMsSUFBQUEsSUFBSSxFQUFFO0FBRkQ7QUFMQyxDQUFkO0FBV0E7Ozs7QUFHQSxPQUFPLElBQU1FLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTVIsR0FBRyxDQUFDLENBQUUsUUFBRixDQUFELENBQVQ7QUFBQSxDQUFkO0FBRVA7Ozs7QUFHQSxPQUFPLFNBQVNJLE1BQVQsR0FBa0I7QUFDckIsU0FBT1YsSUFBSSxDQUFDVyxHQUFMLENBQVNGLEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxHQUF0QixFQUNGSSxJQURFLENBQ0dWLFFBQVEsRUFEWCxFQUVIO0FBRkcsR0FHRlUsSUFIRSxDQUdHWCxNQUFNLENBQUM7QUFDVFksSUFBQUEsUUFBUSxFQUFFLE1BREQ7QUFFVEMsSUFBQUEsTUFBTSxFQUFFO0FBRkMsR0FBRCxDQUhULEVBT0ZGLElBUEUsQ0FPR2YsSUFBSSxDQUFDWSxJQUFMLENBQVVILEtBQUssQ0FBQ0MsTUFBTixDQUFhRSxJQUF2QixDQVBILENBQVA7QUFRSDtBQUVELE9BQU8sU0FBU0MsT0FBVCxHQUFtQjtBQUN0QixTQUFPYixJQUFJLENBQUNXLEdBQUwsQ0FBU0YsS0FBSyxDQUFDSSxPQUFOLENBQWNGLEdBQXZCLEVBQTRCO0FBQUVPLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQTVCLEVBQ0ZILElBREUsQ0FDR2QsS0FBSyxDQUFDO0FBQUVrQixJQUFBQSxPQUFPLEVBQUUsQ0FBQyxLQUFEO0FBQVgsR0FBRCxDQURSLEVBRUZKLElBRkUsQ0FFR1osTUFBTSxFQUZULEVBR0ZZLElBSEUsQ0FHR2IsTUFBTSxDQUFDLGFBQUQsQ0FIVCxFQUlGYSxJQUpFLENBSUdmLElBQUksQ0FBQ1ksSUFBTCxDQUFVSCxLQUFLLENBQUNJLE9BQU4sQ0FBY0QsSUFBeEIsQ0FKSCxDQUFQO0FBTUg7QUFFRDs7OztBQUdBLFNBQVNRLFVBQVQsR0FBc0I7QUFDbEJwQixFQUFBQSxJQUFJLENBQUNxQixLQUFMLENBQVdaLEtBQUssQ0FBQ0ksT0FBTixDQUFjRixHQUF6QixFQUE4QkUsT0FBOUI7QUFDQWIsRUFBQUEsSUFBSSxDQUFDcUIsS0FBTCxDQUFXWixLQUFLLENBQUNDLE1BQU4sQ0FBYUMsR0FBeEIsRUFBNkJELE1BQTdCO0FBQ0g7O0FBQ0QsU0FBU1UsVUFBVSxJQUFJQyxLQUF2QjtBQUVBLElBQU1DLEtBQUssR0FBR3RCLElBQUksQ0FBQ3VCLE1BQUwsQ0FBWVQsS0FBWixFQUFtQmQsSUFBSSxDQUFDd0IsUUFBTCxDQUFjZCxNQUFkLEVBQXNCRyxPQUF0QixDQUFuQixDQUFkO0FBQ0E7Ozs7QUFHQSxlQUFlUyxLQUFmIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcVXNlclxcbm9kZWpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSAnZ3VscCc7XHJcblxyXG5pbXBvcnQgYmFiZWwgZnJvbSAnZ3VscC1iYWJlbCc7XHJcbmltcG9ydCBjb25jYXQgZnJvbSAnZ3VscC1jb25jYXQnO1xyXG5pbXBvcnQgdWdsaWZ5IGZyb20gJ2d1bHAtdWdsaWZ5JztcclxuaW1wb3J0IHJlbmFtZSBmcm9tICdndWxwLXJlbmFtZSc7XHJcbmltcG9ydCBjbGVhbkNTUyBmcm9tICdndWxwLWNsZWFuLWNzcyc7XHJcbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcclxudmFyIHJlbW92ZVVzZVN0cmljdCA9IHJlcXVpcmUoXCJndWxwLXJlbW92ZS11c2Utc3RyaWN0XCIpO1xyXG5cclxuY29uc3QgcGF0aHMgPSB7XHJcbiAgICBzdHlsZXM6IHtcclxuICAgICAgICBzcmM6ICcuL3B1YmxpYy9zdHlsZXNoZWV0cy9zdHlsZS5jc3MnLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH0sXHJcbiAgICBzY3JpcHRzOiB7XHJcbiAgICAgICAgc3JjOiBbJy4vcHVibGljL2phdmFzY3JpcHRzL21haW4uanMnLCAnLi9wdWJsaWMvamF2YXNjcmlwdHMvZ2FtZS5qcyddLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH1cclxufTtcclxuXHJcbi8qXHJcbiAqIEZvciBzbWFsbCB0YXNrcyB5b3UgY2FuIGV4cG9ydCBhcnJvdyBmdW5jdGlvbnNcclxuICovXHJcbmV4cG9ydCBjb25zdCBjbGVhbiA9ICgpID0+IGRlbChbICdhc3NldHMnIF0pO1xyXG5cclxuLypcclxuICogWW91IGNhbiBhbHNvIGRlY2xhcmUgbmFtZWQgZnVuY3Rpb25zIGFuZCBleHBvcnQgdGhlbSBhcyB0YXNrc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0eWxlcygpIHtcclxuICAgIHJldHVybiBndWxwLnNyYyhwYXRocy5zdHlsZXMuc3JjKVxyXG4gICAgICAgIC5waXBlKGNsZWFuQ1NTKCkpXHJcbiAgICAgICAgLy8gcGFzcyBpbiBvcHRpb25zIHRvIHRoZSBzdHJlYW1cclxuICAgICAgICAucGlwZShyZW5hbWUoe1xyXG4gICAgICAgICAgICBiYXNlbmFtZTogJ21haW4nLFxyXG4gICAgICAgICAgICBzdWZmaXg6ICcubWluJ1xyXG4gICAgICAgIH0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zdHlsZXMuZGVzdCkpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2NyaXB0cygpIHtcclxuICAgIHJldHVybiBndWxwLnNyYyhwYXRocy5zY3JpcHRzLnNyYywgeyBzb3VyY2VtYXBzOiB0cnVlIH0pXHJcbiAgICAgICAgLnBpcGUoYmFiZWwoeyBwcmVzZXRzOiBbJ2VudiddIH0pKVxyXG4gICAgICAgIC5waXBlKHVnbGlmeSgpKVxyXG4gICAgICAgIC5waXBlKGNvbmNhdCgnbWFpbi5taW4uanMnKSlcclxuICAgICAgICAucGlwZShndWxwLmRlc3QocGF0aHMuc2NyaXB0cy5kZXN0KSk7XHJcbiAgICAgICAgXHJcbn1cclxuXHJcbi8qXHJcbiAqIFlvdSBjb3VsZCBldmVuIHVzZSBgZXhwb3J0IGFzYCB0byByZW5hbWUgZXhwb3J0ZWQgdGFza3NcclxuICovXHJcbmZ1bmN0aW9uIHdhdGNoRmlsZXMoKSB7XHJcbiAgICBndWxwLndhdGNoKHBhdGhzLnNjcmlwdHMuc3JjLCBzY3JpcHRzKTtcclxuICAgIGd1bHAud2F0Y2gocGF0aHMuc3R5bGVzLnNyYywgc3R5bGVzKTtcclxufVxyXG5leHBvcnQgeyB3YXRjaEZpbGVzIGFzIHdhdGNoIH07XHJcblxyXG5jb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBndWxwLnBhcmFsbGVsKHN0eWxlcywgc2NyaXB0cykpO1xyXG4vKlxyXG4gKiBFeHBvcnQgYSBkZWZhdWx0IHRhc2tcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGJ1aWxkO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "babel",
        "concat",
        "uglify",
        "rename",
        "cleanCSS",
        "del",
        "removeUseStrict",
        "require",
        "paths",
        "styles",
        "src",
        "dest",
        "scripts",
        "clean",
        "pipe",
        "basename",
        "suffix",
        "sourcemaps",
        "presets",
        "watchFiles",
        "watch",
        "build",
        "series",
        "parallel"
      ],
      "mappings": "AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,wBAAD,CAA7B;;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE,gCADD;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADE;AAKVC,EAAAA,OAAO,EAAE;AACLF,IAAAA,GAAG,EAAE,CAAC,8BAAD,EAAiC,8BAAjC,CADA;AAELC,IAAAA,IAAI,EAAE;AAFD;AALC,CAAd;AAWA;;;;AAGA,OAAO,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMR,GAAG,CAAC,CAAE,QAAF,CAAD,CAAT;AAAA,CAAd;AAEP;;;;AAGA,OAAO,SAASI,MAAT,GAAkB;AACrB,SAAOV,IAAI,CAACW,GAAL,CAASF,KAAK,CAACC,MAAN,CAAaC,GAAtB,EACFI,IADE,CACGV,QAAQ,EADX,EAEH;AAFG,GAGFU,IAHE,CAGGX,MAAM,CAAC;AACTY,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,MAAM,EAAE;AAFC,GAAD,CAHT,EAOFF,IAPE,CAOGf,IAAI,CAACY,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAPH,CAAP;AAQH;AAED,OAAO,SAASC,OAAT,GAAmB;AACtB,SAAOb,IAAI,CAACW,GAAL,CAASF,KAAK,CAACI,OAAN,CAAcF,GAAvB,EAA4B;AAAEO,IAAAA,UAAU,EAAE;AAAd,GAA5B,EACFH,IADE,CACGd,KAAK,CAAC;AAAEkB,IAAAA,OAAO,EAAE,CAAC,KAAD;AAAX,GAAD,CADR,EAEFJ,IAFE,CAEGZ,MAAM,EAFT,EAGFY,IAHE,CAGGb,MAAM,CAAC,aAAD,CAHT,EAIFa,IAJE,CAIGf,IAAI,CAACY,IAAL,CAAUH,KAAK,CAACI,OAAN,CAAcD,IAAxB,CAJH,CAAP;AAMH;AAED;;;;AAGA,SAASQ,UAAT,GAAsB;AAClBpB,EAAAA,IAAI,CAACqB,KAAL,CAAWZ,KAAK,CAACI,OAAN,CAAcF,GAAzB,EAA8BE,OAA9B;AACAb,EAAAA,IAAI,CAACqB,KAAL,CAAWZ,KAAK,CAACC,MAAN,CAAaC,GAAxB,EAA6BD,MAA7B;AACH;;AACD,SAASU,UAAU,IAAIC,KAAvB;AAEA,IAAMC,KAAK,GAAGtB,IAAI,CAACuB,MAAL,CAAYT,KAAZ,EAAmBd,IAAI,CAACwB,QAAL,CAAcd,MAAd,EAAsBG,OAAtB,CAAnB,CAAd;AACA;;;;AAGA,eAAeS,KAAf",
      "sourceRoot": "C:\\Users\\User\\nodejs",
      "sourcesContent": [
        "import gulp from 'gulp';\r\n\r\nimport babel from 'gulp-babel';\r\nimport concat from 'gulp-concat';\r\nimport uglify from 'gulp-uglify';\r\nimport rename from 'gulp-rename';\r\nimport cleanCSS from 'gulp-clean-css';\r\nimport del from 'del';\r\nvar removeUseStrict = require(\"gulp-remove-use-strict\");\r\n\r\nconst paths = {\r\n    styles: {\r\n        src: './public/stylesheets/style.css',\r\n        dest: './public/dist/'\r\n    },\r\n    scripts: {\r\n        src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\r\n        dest: './public/dist/'\r\n    }\r\n};\r\n\r\n/*\r\n * For small tasks you can export arrow functions\r\n */\r\nexport const clean = () => del([ 'assets' ]);\r\n\r\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\r\nexport function styles() {\r\n    return gulp.src(paths.styles.src)\r\n        .pipe(cleanCSS())\r\n        // pass in options to the stream\r\n        .pipe(rename({\r\n            basename: 'main',\r\n            suffix: '.min'\r\n        }))\r\n        .pipe(gulp.dest(paths.styles.dest));\r\n}\r\n\r\nexport function scripts() {\r\n    return gulp.src(paths.scripts.src, { sourcemaps: true })\r\n        .pipe(babel({ presets: ['env'] }))\r\n        .pipe(uglify())\r\n        .pipe(concat('main.min.js'))\r\n        .pipe(gulp.dest(paths.scripts.dest));\r\n        \r\n}\r\n\r\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\r\nfunction watchFiles() {\r\n    gulp.watch(paths.scripts.src, scripts);\r\n    gulp.watch(paths.styles.src, styles);\r\n}\r\nexport { watchFiles as watch };\r\n\r\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\r\n/*\r\n * Export a default task\r\n */\r\nexport default build;\r\n\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1580445901799
  },
  "{\"sourceRoot\":\"c:\\\\Users\\\\User\\\\nodejs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"c:\\\\Users\\\\User\\\\nodejs\",\"filename\":\"c:\\\\Users\\\\User\\\\nodejs\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"c:\\\\Users\\\\User\\\\nodejs\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "c:\\Users\\User\\nodejs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "c:\\Users\\User\\nodejs",
      "filename": "c:\\Users\\User\\nodejs\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "c:\\Users\\User\\nodejs",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "c:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "c:\\Users\\User\\nodejs\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "c:\\Users\\User\\nodejs",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styles = styles;\nexports.scripts = scripts;\nexports.images = images;\nexports.watch = watchFiles;\nexports[\"default\"] = exports.clean = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpConcat = _interopRequireDefault(require(\"gulp-concat\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar paths = {\n  styles: {\n    src: './public/stylesheets/style.css',\n    dest: './public/dist/'\n  },\n  scripts: {\n    src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\n    dest: './public/dist/'\n  },\n  images: {\n    src: './public/images/*.{jpg,jpeg,png}',\n    dest: './public/dist/'\n  }\n};\n/*\r\n * For small tasks you can export arrow functions\r\n */\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['assets']);\n};\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\n\n\nexports.clean = clean;\n\nfunction styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpCleanCss[\"default\"])()) // pass in options to the stream\n  .pipe((0, _gulpRename[\"default\"])({\n    basename: 'main',\n    suffix: '.min'\n  })).pipe(_gulp[\"default\"].dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return _gulp[\"default\"].src(paths.scripts.src, {\n    sourcemaps: true\n  }).pipe((0, _gulpBabel[\"default\"])({\n    presets: [[\"@babel/preset-env\", {\n      \"modules\": false\n    }]]\n  })).pipe((0, _gulpUglify[\"default\"])()).pipe((0, _gulpConcat[\"default\"])('main.min.js')).pipe(_gulp[\"default\"].dest(paths.scripts.dest));\n}\n\nfunction images() {\n  return _gulp[\"default\"].src(paths.images.src, {\n    since: _gulp[\"default\"].lastRun(images)\n  }).pipe((0, _gulpImagemin[\"default\"])({\n    optimizationLevel: 5\n  })).pipe(_gulp[\"default\"].dest(paths.images.dest));\n}\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\n\n\nfunction watchFiles() {\n  _gulp[\"default\"].watch(paths.scripts.src, scripts);\n\n  _gulp[\"default\"].watch(paths.styles.src, styles);\n}\n\nvar build = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts));\n/*\r\n * Export a default task\r\n */\n\n\nvar _default = build;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInBhdGhzIiwic3R5bGVzIiwic3JjIiwiZGVzdCIsInNjcmlwdHMiLCJpbWFnZXMiLCJjbGVhbiIsImd1bHAiLCJwaXBlIiwiYmFzZW5hbWUiLCJzdWZmaXgiLCJzb3VyY2VtYXBzIiwicHJlc2V0cyIsInNpbmNlIiwibGFzdFJ1biIsIm9wdGltaXphdGlvbkxldmVsIiwid2F0Y2hGaWxlcyIsIndhdGNoIiwiYnVpbGQiLCJzZXJpZXMiLCJwYXJhbGxlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUdBLElBQU1BLEtBQUssR0FBRztBQUNWQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsR0FBRyxFQUFFLGdDQUREO0FBRUpDLElBQUFBLElBQUksRUFBRTtBQUZGLEdBREU7QUFLVkMsRUFBQUEsT0FBTyxFQUFFO0FBQ0xGLElBQUFBLEdBQUcsRUFBRSxDQUFDLDhCQUFELEVBQWlDLDhCQUFqQyxDQURBO0FBRUxDLElBQUFBLElBQUksRUFBRTtBQUZELEdBTEM7QUFTVkUsRUFBQUEsTUFBTSxFQUFFO0FBQ0pILElBQUFBLEdBQUcsRUFBRSxrQ0FERDtBQUVKQyxJQUFBQSxJQUFJLEVBQUU7QUFGRjtBQVRFLENBQWQ7QUFlQTs7OztBQUdPLElBQU1HLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsU0FBTSxxQkFBSSxDQUFFLFFBQUYsQ0FBSixDQUFOO0FBQUEsQ0FBZDtBQUVQOzs7Ozs7O0FBR08sU0FBU0wsTUFBVCxHQUFrQjtBQUNyQixTQUFPTSxpQkFBS0wsR0FBTCxDQUFTRixLQUFLLENBQUNDLE1BQU4sQ0FBYUMsR0FBdEIsRUFDRk0sSUFERSxDQUNHLCtCQURILEVBRUg7QUFGRyxHQUdGQSxJQUhFLENBR0csNEJBQU87QUFDVEMsSUFBQUEsUUFBUSxFQUFFLE1BREQ7QUFFVEMsSUFBQUEsTUFBTSxFQUFFO0FBRkMsR0FBUCxDQUhILEVBT0ZGLElBUEUsQ0FPR0QsaUJBQUtKLElBQUwsQ0FBVUgsS0FBSyxDQUFDQyxNQUFOLENBQWFFLElBQXZCLENBUEgsQ0FBUDtBQVFIOztBQUVNLFNBQVNDLE9BQVQsR0FBbUI7QUFDdEIsU0FBT0csaUJBQUtMLEdBQUwsQ0FBU0YsS0FBSyxDQUFDSSxPQUFOLENBQWNGLEdBQXZCLEVBQTRCO0FBQUVTLElBQUFBLFVBQVUsRUFBRTtBQUFkLEdBQTVCLEVBQ0ZILElBREUsQ0FDRywyQkFBTTtBQUFFSSxJQUFBQSxPQUFPLEVBQUUsQ0FDbkIsQ0FBQyxtQkFBRCxFQUFzQjtBQUFDLGlCQUFZO0FBQWIsS0FBdEIsQ0FEbUI7QUFBWCxHQUFOLENBREgsRUFLRkosSUFMRSxDQUtHLDZCQUxILEVBTUZBLElBTkUsQ0FNRyw0QkFBTyxhQUFQLENBTkgsRUFPRkEsSUFQRSxDQU9HRCxpQkFBS0osSUFBTCxDQUFVSCxLQUFLLENBQUNJLE9BQU4sQ0FBY0QsSUFBeEIsQ0FQSCxDQUFQO0FBU0g7O0FBRU0sU0FBU0UsTUFBVCxHQUFpQjtBQUVwQixTQUFPRSxpQkFBS0wsR0FBTCxDQUFTRixLQUFLLENBQUNLLE1BQU4sQ0FBYUgsR0FBdEIsRUFBMkI7QUFBQ1csSUFBQUEsS0FBSyxFQUFFTixpQkFBS08sT0FBTCxDQUFhVCxNQUFiO0FBQVIsR0FBM0IsRUFDRkcsSUFERSxDQUNHLDhCQUFTO0FBQUNPLElBQUFBLGlCQUFpQixFQUFFO0FBQXBCLEdBQVQsQ0FESCxFQUVGUCxJQUZFLENBRUdELGlCQUFLSixJQUFMLENBQVVILEtBQUssQ0FBQ0ssTUFBTixDQUFhRixJQUF2QixDQUZILENBQVA7QUFJSDtBQUVEOzs7OztBQUdBLFNBQVNhLFVBQVQsR0FBc0I7QUFDbEJULG1CQUFLVSxLQUFMLENBQVdqQixLQUFLLENBQUNJLE9BQU4sQ0FBY0YsR0FBekIsRUFBOEJFLE9BQTlCOztBQUNBRyxtQkFBS1UsS0FBTCxDQUFXakIsS0FBSyxDQUFDQyxNQUFOLENBQWFDLEdBQXhCLEVBQTZCRCxNQUE3QjtBQUNIOztBQUdELElBQU1pQixLQUFLLEdBQUdYLGlCQUFLWSxNQUFMLENBQVliLEtBQVosRUFBbUJDLGlCQUFLYSxRQUFMLENBQWNuQixNQUFkLEVBQXNCRyxPQUF0QixDQUFuQixDQUFkO0FBQ0E7Ozs7O2VBR2VjLEsiLCJzb3VyY2VSb290IjoiYzpcXFVzZXJzXFxVc2VyXFxub2RlanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tICdndWxwJztcclxuXHJcbmltcG9ydCBiYWJlbCBmcm9tICdndWxwLWJhYmVsJztcclxuaW1wb3J0IGNvbmNhdCBmcm9tICdndWxwLWNvbmNhdCc7XHJcbmltcG9ydCB1Z2xpZnkgZnJvbSAnZ3VscC11Z2xpZnknO1xyXG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcclxuaW1wb3J0IGNsZWFuQ1NTIGZyb20gJ2d1bHAtY2xlYW4tY3NzJztcclxuaW1wb3J0IGRlbCBmcm9tICdkZWwnO1xyXG5pbXBvcnQgaW1hZ2VtaW4gZnJvbSAnZ3VscC1pbWFnZW1pbic7XHJcblxyXG5cclxuY29uc3QgcGF0aHMgPSB7XHJcbiAgICBzdHlsZXM6IHtcclxuICAgICAgICBzcmM6ICcuL3B1YmxpYy9zdHlsZXNoZWV0cy9zdHlsZS5jc3MnLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH0sXHJcbiAgICBzY3JpcHRzOiB7XHJcbiAgICAgICAgc3JjOiBbJy4vcHVibGljL2phdmFzY3JpcHRzL21haW4uanMnLCAnLi9wdWJsaWMvamF2YXNjcmlwdHMvZ2FtZS5qcyddLFxyXG4gICAgICAgIGRlc3Q6ICcuL3B1YmxpYy9kaXN0LydcclxuICAgIH0sXHJcbiAgICBpbWFnZXM6IHtcclxuICAgICAgICBzcmM6ICcuL3B1YmxpYy9pbWFnZXMvKi57anBnLGpwZWcscG5nfScsXHJcbiAgICAgICAgZGVzdDogJy4vcHVibGljL2Rpc3QvJ1xyXG4gICAgfVxyXG59O1xyXG5cclxuLypcclxuICogRm9yIHNtYWxsIHRhc2tzIHlvdSBjYW4gZXhwb3J0IGFycm93IGZ1bmN0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFsgJ2Fzc2V0cycgXSk7XHJcblxyXG4vKlxyXG4gKiBZb3UgY2FuIGFsc28gZGVjbGFyZSBuYW1lZCBmdW5jdGlvbnMgYW5kIGV4cG9ydCB0aGVtIGFzIHRhc2tzXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc3R5bGVzKCkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnN0eWxlcy5zcmMpXHJcbiAgICAgICAgLnBpcGUoY2xlYW5DU1MoKSlcclxuICAgICAgICAvLyBwYXNzIGluIG9wdGlvbnMgdG8gdGhlIHN0cmVhbVxyXG4gICAgICAgIC5waXBlKHJlbmFtZSh7XHJcbiAgICAgICAgICAgIGJhc2VuYW1lOiAnbWFpbicsXHJcbiAgICAgICAgICAgIHN1ZmZpeDogJy5taW4nXHJcbiAgICAgICAgfSkpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnN0eWxlcy5kZXN0KSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzY3JpcHRzKCkge1xyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLnNjcmlwdHMuc3JjLCB7IHNvdXJjZW1hcHM6IHRydWUgfSlcclxuICAgICAgICAucGlwZShiYWJlbCh7IHByZXNldHM6IFtcclxuICAgICAgICAgICAgW1wiQGJhYmVsL3ByZXNldC1lbnZcIiwge1wibW9kdWxlc1wiIDogZmFsc2V9XVxyXG4gICAgICAgICAgXSBcclxuICAgICAgICB9KSlcclxuICAgICAgICAucGlwZSh1Z2xpZnkoKSlcclxuICAgICAgICAucGlwZShjb25jYXQoJ21haW4ubWluLmpzJykpXHJcbiAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHBhdGhzLnNjcmlwdHMuZGVzdCkpO1xyXG4gICAgICAgIFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW1hZ2VzKCl7XHJcblxyXG4gICAgcmV0dXJuIGd1bHAuc3JjKHBhdGhzLmltYWdlcy5zcmMsIHtzaW5jZTogZ3VscC5sYXN0UnVuKGltYWdlcyl9KVxyXG4gICAgICAgIC5waXBlKGltYWdlbWluKHtvcHRpbWl6YXRpb25MZXZlbDogNX0pKVxyXG4gICAgICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5pbWFnZXMuZGVzdCkpO1xyXG5cclxufVxyXG5cclxuLypcclxuICogWW91IGNvdWxkIGV2ZW4gdXNlIGBleHBvcnQgYXNgIHRvIHJlbmFtZSBleHBvcnRlZCB0YXNrc1xyXG4gKi9cclxuZnVuY3Rpb24gd2F0Y2hGaWxlcygpIHtcclxuICAgIGd1bHAud2F0Y2gocGF0aHMuc2NyaXB0cy5zcmMsIHNjcmlwdHMpO1xyXG4gICAgZ3VscC53YXRjaChwYXRocy5zdHlsZXMuc3JjLCBzdHlsZXMpO1xyXG59XHJcbmV4cG9ydCB7IHdhdGNoRmlsZXMgYXMgd2F0Y2ggfTtcclxuXHJcbmNvbnN0IGJ1aWxkID0gZ3VscC5zZXJpZXMoY2xlYW4sIGd1bHAucGFyYWxsZWwoc3R5bGVzLCBzY3JpcHRzKSk7XHJcbi8qXHJcbiAqIEV4cG9ydCBhIGRlZmF1bHQgdGFza1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgYnVpbGQ7XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "paths",
        "styles",
        "src",
        "dest",
        "scripts",
        "images",
        "clean",
        "gulp",
        "pipe",
        "basename",
        "suffix",
        "sourcemaps",
        "presets",
        "since",
        "lastRun",
        "optimizationLevel",
        "watchFiles",
        "watch",
        "build",
        "series",
        "parallel"
      ],
      "mappings": ";;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,IAAMA,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE,gCADD;AAEJC,IAAAA,IAAI,EAAE;AAFF,GADE;AAKVC,EAAAA,OAAO,EAAE;AACLF,IAAAA,GAAG,EAAE,CAAC,8BAAD,EAAiC,8BAAjC,CADA;AAELC,IAAAA,IAAI,EAAE;AAFD,GALC;AASVE,EAAAA,MAAM,EAAE;AACJH,IAAAA,GAAG,EAAE,kCADD;AAEJC,IAAAA,IAAI,EAAE;AAFF;AATE,CAAd;AAeA;;;;AAGO,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAE,QAAF,CAAJ,CAAN;AAAA,CAAd;AAEP;;;;;;;AAGO,SAASL,MAAT,GAAkB;AACrB,SAAOM,iBAAKL,GAAL,CAASF,KAAK,CAACC,MAAN,CAAaC,GAAtB,EACFM,IADE,CACG,+BADH,EAEH;AAFG,GAGFA,IAHE,CAGG,4BAAO;AACTC,IAAAA,QAAQ,EAAE,MADD;AAETC,IAAAA,MAAM,EAAE;AAFC,GAAP,CAHH,EAOFF,IAPE,CAOGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAPH,CAAP;AAQH;;AAEM,SAASC,OAAT,GAAmB;AACtB,SAAOG,iBAAKL,GAAL,CAASF,KAAK,CAACI,OAAN,CAAcF,GAAvB,EAA4B;AAAES,IAAAA,UAAU,EAAE;AAAd,GAA5B,EACFH,IADE,CACG,2BAAM;AAAEI,IAAAA,OAAO,EAAE,CACnB,CAAC,mBAAD,EAAsB;AAAC,iBAAY;AAAb,KAAtB,CADmB;AAAX,GAAN,CADH,EAKFJ,IALE,CAKG,6BALH,EAMFA,IANE,CAMG,4BAAO,aAAP,CANH,EAOFA,IAPE,CAOGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACI,OAAN,CAAcD,IAAxB,CAPH,CAAP;AASH;;AAEM,SAASE,MAAT,GAAiB;AAEpB,SAAOE,iBAAKL,GAAL,CAASF,KAAK,CAACK,MAAN,CAAaH,GAAtB,EAA2B;AAACW,IAAAA,KAAK,EAAEN,iBAAKO,OAAL,CAAaT,MAAb;AAAR,GAA3B,EACFG,IADE,CACG,8BAAS;AAACO,IAAAA,iBAAiB,EAAE;AAApB,GAAT,CADH,EAEFP,IAFE,CAEGD,iBAAKJ,IAAL,CAAUH,KAAK,CAACK,MAAN,CAAaF,IAAvB,CAFH,CAAP;AAIH;AAED;;;;;AAGA,SAASa,UAAT,GAAsB;AAClBT,mBAAKU,KAAL,CAAWjB,KAAK,CAACI,OAAN,CAAcF,GAAzB,EAA8BE,OAA9B;;AACAG,mBAAKU,KAAL,CAAWjB,KAAK,CAACC,MAAN,CAAaC,GAAxB,EAA6BD,MAA7B;AACH;;AAGD,IAAMiB,KAAK,GAAGX,iBAAKY,MAAL,CAAYb,KAAZ,EAAmBC,iBAAKa,QAAL,CAAcnB,MAAd,EAAsBG,OAAtB,CAAnB,CAAd;AACA;;;;;eAGec,K",
      "sourceRoot": "c:\\Users\\User\\nodejs",
      "sourcesContent": [
        "import gulp from 'gulp';\r\n\r\nimport babel from 'gulp-babel';\r\nimport concat from 'gulp-concat';\r\nimport uglify from 'gulp-uglify';\r\nimport rename from 'gulp-rename';\r\nimport cleanCSS from 'gulp-clean-css';\r\nimport del from 'del';\r\nimport imagemin from 'gulp-imagemin';\r\n\r\n\r\nconst paths = {\r\n    styles: {\r\n        src: './public/stylesheets/style.css',\r\n        dest: './public/dist/'\r\n    },\r\n    scripts: {\r\n        src: ['./public/javascripts/main.js', './public/javascripts/game.js'],\r\n        dest: './public/dist/'\r\n    },\r\n    images: {\r\n        src: './public/images/*.{jpg,jpeg,png}',\r\n        dest: './public/dist/'\r\n    }\r\n};\r\n\r\n/*\r\n * For small tasks you can export arrow functions\r\n */\r\nexport const clean = () => del([ 'assets' ]);\r\n\r\n/*\r\n * You can also declare named functions and export them as tasks\r\n */\r\nexport function styles() {\r\n    return gulp.src(paths.styles.src)\r\n        .pipe(cleanCSS())\r\n        // pass in options to the stream\r\n        .pipe(rename({\r\n            basename: 'main',\r\n            suffix: '.min'\r\n        }))\r\n        .pipe(gulp.dest(paths.styles.dest));\r\n}\r\n\r\nexport function scripts() {\r\n    return gulp.src(paths.scripts.src, { sourcemaps: true })\r\n        .pipe(babel({ presets: [\r\n            [\"@babel/preset-env\", {\"modules\" : false}]\r\n          ] \r\n        }))\r\n        .pipe(uglify())\r\n        .pipe(concat('main.min.js'))\r\n        .pipe(gulp.dest(paths.scripts.dest));\r\n        \r\n}\r\n\r\nexport function images(){\r\n\r\n    return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\r\n        .pipe(imagemin({optimizationLevel: 5}))\r\n        .pipe(gulp.dest(paths.images.dest));\r\n\r\n}\r\n\r\n/*\r\n * You could even use `export as` to rename exported tasks\r\n */\r\nfunction watchFiles() {\r\n    gulp.watch(paths.scripts.src, scripts);\r\n    gulp.watch(paths.styles.src, styles);\r\n}\r\nexport { watchFiles as watch };\r\n\r\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\r\n/*\r\n * Export a default task\r\n */\r\nexport default build;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580447928019
  }
}